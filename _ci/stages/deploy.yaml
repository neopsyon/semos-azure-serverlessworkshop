parameters:
  - name: dependsOn
    type: string

  - name: vmImage
    type: string

  - name: environment
    type: string

  - name: location
    type: string

  - name: connectedServiceName
    type: string

  - name: resourceGroupName
    type: string

  - name: resourceName
    type: string

stages:
  - stage: ${{ format('Deploy_{0}', parameters.environment ) }}
    dependsOn: ${{ parameters.dependsOn }}
    variables:
      - name: artifactName
        value: drop

      - name: artifactArchive
        value: build$(Build.BuildId).zip

      - name: resourceEnvironment
        value: ${{ format('{0}{1}', parameters.resourceName, parameters.environment ) }}

      - template: variables/vars.yaml

    jobs:
      - job: Deploy
        pool:
          vmImage: ${{ parameters.vmImage }}
        steps:
          - checkout: self
            clean: true

          - template: steps/deployKeyVault.yaml
            parameters:
              connectedServiceName: ${{ parameters.connectedServiceName }}
              resourceGroupName: ${{ parameters.resourceGroupName }}
              keyVaultName: $(keyVaultName)
              location: ${{ parameters.location }}

          # - template: steps/deployFunctionApp.yaml
          #   parameters:
          #     resourceGroupName: ${{ parameters.resourceGroupName }}
          #     connectedServiceName: ${{ parameters.connectedServiceName }}
          #     location: ${{ parameters.location }}
          #     storageAccountName: $(storageAccountName)
          #     appServicePlanName: $(appServicePlanName)
          #     appInsightsName: $(appInsightsName)
          #     funAppName: $(funAppName)
          #     artifactName: $(artifactName)
          #     artifactArchive: $(artifactArchive)

          # - task: AzureResourceGroupDeployment@2
          #   displayName: Deploy eventGrid
          #   inputs:
          #     ConnectedServiceName: ${{ parameters.connectedServiceName }}
          #     resourceGroupName: ${{ parameters.resourceGroupName }}
          #     location: ${{ parameters.location }}
          #     csmFile: $(templatesPath)/eventGrid.json
          #     overrideParameters: >
          #       -functionAppName $(funAppName)
          #       -functionName keyVault-monitor
          #       -keyVaultName $(keyVaultName)
          #       -funAppResourceGroup ${{ parameters.resourceGroupName }}
          #       -eventGridTopicName $(eventGridTopicName)
          #       -includedEventTypes [
          #         "Microsoft.KeyVault.KeyNearExpiry",
          #         "Microsoft.KeyVault.CertificateNearExpiry",
          #         "Microsoft.KeyVault.SecretNearExpiry",
          #         "Microsoft.KeyVault.SecretNewVersionCreated",
          #         "Microsoft.KeyVault.CertificateNewVersionCreated",
          #         "Microsoft.KeyVault.KeyNewVersionCreated"
          #       ]