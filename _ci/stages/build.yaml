parameters:
- name: functions
  type: object

- name: vmImage
  type: string

- name: environment
  type: string

stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: ${{ parameters.vmImage }}
        steps:
        - powershell: |
            if (-not (Get-Module -Name PSScriptAnalyzer -ListAvailable)) {
              Install-Module PSScriptAnalyzer -Repository PSGallery -Force -Confirm:$false
            }
            Import-Module PSScriptAnalyzer
          displayName: Install PSSCriptAnalyzer

        - ${{ each Function in parameters.Functions }}:
            - powershell: |
                Invoke-ScriptAnalyzer -Path $(System.DefaultWorkingDirectory)/src/${{ Function }}
              displayName: Analyze ${{ Function }} code via PSScryptAnalyzer

        - task: ArchiveFiles@2
          displayName: Archive source files
          inputs:
            rootFolderOrFile: $(System.DefaultWorkingDirectory)/src/
            includeRootFolder: false
            archiveFile: $(System.DefaultWorkingDirectory)/$(artifactArchive)

        - publish: $(System.DefaultWorkingDirectory)/$(artifactArchive)
          artifact: $(artifactName)
          displayName: Publish build artifact